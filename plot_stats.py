import matplotlib.pyplot as plt
from matplotlib.collections import EventCollection
import numpy as np




# avg = [[2.010624535379962e-05, 1.0656701879166711e-05, 9.854565610400319e-06, 1.0468966534229665e-05, 7.765673814168674e-06, 9.785124853607777e-06, 1.0529632273691264e-05, 1.4285852951963218e-05, 1.1333283229075504e-05, 1.0821549077628036e-05,
#         9.879127583759494e-06, 1.0106500179161599e-05, 1.3136192791783246e-05, 1.0725720446604208e-05, 9.639057056735098e-06, 1.206964434011144e-05, 8.786681691765658e-06, 8.042114979133494e-06, 1.1546507581030505e-05, 1.2382607992148144e-05, 0.004601154474516015]]

# diversity = [[1.0, 0.9866666666666667, 0.98, 0.98, 0.97, 0.9633333333333334, 0.9733333333333334, 0.9666666666666667, 0.9633333333333334, 0.9533333333333334, 0.9833333333333333,
#               0.98, 0.9566666666666667, 0.9733333333333334, 0.9666666666666667, 0.9766666666666667, 0.9666666666666667, 0.9566666666666667, 0.9633333333333334, 0.9666666666666667, 0.98]]

# # plot the data
# fig_div = plt.figure()

# for i in range(len(diversity)):
#     plt.plot(range(len(diversity[i])), diversity[i])

# plt.title('Diversity')
# plt.legend(["SGMO"], loc="lower right")

# plt.ylabel("Diversity")
# plt.xlabel("Generation")
# # display the plot
# plt.savefig("Diversity.jpg")


# # plot the data
# fig_avg = plt.figure()

# for i in range(len(avg)):
#     plt.plot(range(len(avg[i])), avg[i])

# plt.title('Average fitness')
# plt.legend(["SGMO"], loc="upper right")
# plt.ylabel("Avg. Fitness")
# plt.xlabel("Generation")

# # save plot
# plt.savefig("Average.jpg")


def getElements(lst, ind):
    return [item[ind] for item in lst]

def filter_data(raw_data, filtered_data):

    for i in range(len(raw_data)):
        t_res=[]
        for j in range (len(raw_data[i])):
            t_res.append(raw_data[i][j][-4:])
        filtered_data.append(t_res)


v1=[[0, 5, 80, 0, 1, 1600, 1, 1, 3, 0.64326, 127979.0, 0.00217033, 5.0262933762570425e-06],
[0, 5, 80, 0, 0, 800, 0, 1, 1, 0.639173, 128071.0, 0.00364291, 4.990770744352742e-06],
[0, 5, 80, 0, 0, 800, 0, 1, 1, 0.639173, 128071.0, 0.00364291, 4.990770744352742e-06],
[0, 5, 20, 0, 0, 1600, 0, 1, 4, 0.629483, 128063.0, 0.00412229, 4.915416630876991e-06],
[0, 5, 20, 0, 0, 1600, 0, 0, 3, 0.628905, 128071.0, 0.00308487, 4.9105964660227536e-06],
[0, 5, 20, 0, 0, 1600, 0, 0, 3, 0.628905, 128071.0, 0.00308487, 4.9105964660227536e-06],
[0, 5, 20, 0, 0, 1600, 0, 0, 3, 0.628905, 128071.0, 0.00308487, 4.9105964660227536e-06],
[0, 5, 20, 0, 0, 1600, 0, 0, 3, 0.628905, 128071.0, 0.00308487, 4.9105964660227536e-06],
[0, 5, 20, 0, 0, 1600, 0, 0, 3, 0.628905, 128071.0, 0.00308487, 4.9105964660227536e-06],
[0, 5, 20, 0, 0, 1600, 0, 0, 3, 0.628905, 128071.0, 0.00308487, 4.9105964660227536e-06],
[0, 5, 20, 0, 0, 1600, 1, 1, 9, 0.569043, 30621.0, 0.750088, 4.906799512758847e-06],
[0, 5, 20, 0, 0, 1600, 1, 1, 9, 0.569043, 30621.0, 0.750088, 4.906799512758847e-06],
[0, 5, 20, 0, 0, 1600, 1, 1, 9, 0.569043, 30621.0, 0.750088, 4.906799512758847e-06],
[0, 5, 20, 0, 0, 1600, 1, 1, 9, 0.569043, 30621.0, 0.750088, 4.906799512758847e-06],
[0, 5, 20, 0, 0, 1600, 1, 1, 9, 0.569043, 30621.0, 0.750088, 4.906799512758847e-06],
[0, 6, 20, 0, 0, 800, 0, 0, 3, 0.626735, 128076.0, 0.00299813, 4.89346169461882e-06],
[0, 6, 20, 0, 0, 800, 0, 0, 3, 0.626735, 128076.0, 0.00299813, 4.89346169461882e-06],
[0, 6, 20, 0, 0, 800, 0, 0, 3, 0.626735, 128076.0, 0.00299813, 4.89346169461882e-06],
[0, 6, 20, 0, 0, 800, 0, 0, 3, 0.626735, 128076.0, 0.00299813, 4.89346169461882e-06],
[0, 6, 20, 0, 0, 800, 0, 0, 3, 0.626735, 128076.0, 0.00299813, 4.89346169461882e-06],
[0, 6, 20, 0, 0, 800, 0, 0, 3, 0.626735, 128076.0, 0.00299813, 4.89346169461882e-06],
[0, 6, 20, 0, 0, 800, 0, 0, 3, 0.626735, 128076.0, 0.00299813, 4.89346169461882e-06],
[0, 6, 20, 0, 0, 800, 0, 0, 3, 0.626735, 128076.0, 0.00299813, 4.89346169461882e-06],
[0, 6, 20, 0, 0, 800, 0, 0, 3, 0.626735, 128076.0, 0.00299813, 4.89346169461882e-06],
[0, 6, 20, 0, 0, 800, 0, 0, 3, 0.626735, 128076.0, 0.00299813, 4.89346169461882e-06],
[0, 6, 20, 0, 0, 800, 0, 0, 3, 0.626735, 128076.0, 0.00299813, 4.89346169461882e-06],
]



v2=[[0, 5, 80, 0, 1, 1600, 1, 1, 3, 0.64326, 127979.0, 0.00217033, 5.037202091560334e-06],
[0, 5, 80, 0, 0, 1600, 0, 1, 1, 0.639973, 128069.0, 0.00295489, 5.011861182784046e-06],
[0, 5, 80, 0, 0, 1600, 0, 1, 1, 0.639973, 128069.0, 0.00295489, 5.011861182784046e-06],
[0, 5, 80, 0, 0, 1600, 0, 1, 1, 0.639973, 128069.0, 0.00295489, 5.011861182784046e-06],
[0, 5, 80, 0, 0, 1600, 0, 0, 1, 0.637756, 128078.0, 0.00327288, 4.995731498440637e-06],
[0, 5, 80, 0, 0, 1600, 0, 0, 1, 0.637756, 128078.0, 0.00327288, 4.995731498440637e-06],
[0, 5, 80, 0, 0, 1600, 0, 0, 1, 0.637756, 128078.0, 0.00327288, 4.995731498440637e-06],
[0, 5, 80, 0, 0, 1600, 0, 0, 1, 0.637756, 128078.0, 0.00327288, 4.995731498440637e-06],
[0, 5, 80, 0, 0, 1600, 0, 0, 1, 0.637756, 128078.0, 0.00327288, 4.995731498440637e-06],
[0, 5, 80, 0, 0, 1600, 0, 0, 1, 0.637756, 128078.0, 0.00327288, 4.995731498440637e-06],
[0, 5, 80, 0, 0, 1600, 0, 0, 1, 0.637756, 128078.0, 0.00327288, 4.995731498440637e-06],
[0, 5, 80, 0, 0, 1600, 0, 0, 1, 0.637756, 128078.0, 0.00327288, 4.995731498440637e-06],
[0, 5, 80, 0, 0, 1600, 0, 0, 1, 0.637756, 128078.0, 0.00327288, 4.995731498440637e-06],
[0, 5, 80, 0, 0, 1600, 0, 0, 1, 0.637756, 128078.0, 0.00327288, 4.995731498440637e-06],
[0, 5, 80, 0, 0, 1600, 0, 0, 1, 0.637756, 128078.0, 0.00327288, 4.995731498440637e-06],
[0, 5, 80, 0, 0, 1600, 0, 0, 1, 0.637756, 128078.0, 0.00327288, 4.995731498440637e-06],
[0, 5, 80, 0, 0, 1600, 0, 0, 1, 0.637756, 128078.0, 0.00327288, 4.995731498440637e-06],
[0, 5, 80, 0, 0, 1600, 0, 0, 1, 0.637756, 128078.0, 0.00327288, 4.995731498440637e-06],
[0, 5, 80, 0, 0, 1600, 0, 0, 1, 0.637756, 128078.0, 0.00327288, 4.995731498440637e-06],
[0, 5, 80, 0, 0, 1600, 0, 0, 1, 0.637756, 128078.0, 0.00327288, 4.995731498440637e-06],
[0, 5, 80, 0, 0, 1600, 0, 0, 1, 0.637756, 128078.0, 0.00327288, 4.995731498440637e-06],
[0, 5, 80, 0, 0, 1600, 0, 0, 1, 0.637756, 128078.0, 0.00327288, 4.995731498440637e-06],
[0, 5, 80, 0, 0, 1600, 0, 0, 1, 0.637756, 128078.0, 0.00327288, 4.995731498440637e-06],
[0, 5, 80, 0, 0, 1600, 0, 0, 1, 0.637756, 128078.0, 0.00327288, 4.995731498440637e-06],
[0, 6, 160, 0, 0, 800, 1, 0, 4, 0.627258, 128077.0, 0.00436679, 4.918893352919104e-06],
[0, 6, 160, 0, 0, 800, 1, 0, 4, 0.627258, 128077.0, 0.00436679, 4.918893352919104e-06]
]

raw_indiv=[v1,v2]

# [energy, throughput, packet_loss, fitness]

filtered_data=[]
filter_data(raw_indiv, filtered_data)

# plot the data
fig_fit = plt.figure()

for i in range(len(filtered_data)):
    plt.plot(range(len(filtered_data[i])), getElements(filtered_data[i], 3))

plt.title('Fitness do melhor individuo (cenário básico)')
plt.legend(["EvoMCS_v1", "EvoMCS_v2"], loc="upper right")
plt.ylabel("Fitness")
plt.xlabel("Geração")

# save plot
plt.savefig("Best_fitness_basico.jpg")

# plot the data
fig_plr = plt.figure()

for i in range(len(filtered_data)):
    plt.plot(range(len(filtered_data[i])), getElements(filtered_data[i], 2))

plt.title('PLR Médio do melhor individuo')
plt.legend(["EvoMCS_v1", "EvoMCS_v2"], loc="upper right")
plt.ylabel("Fitness")
plt.xlabel("Geração")

# save plot
plt.savefig("Avg_packet_loss_basico.jpg")


# plot the data
fig_energy = plt.figure()

plt.plot(range(len(filtered_data[0])), getElements(filtered_data[0], 3))
plt.plot(range(len(filtered_data[1])), np.divide(getElements(filtered_data[1], 0), getElements(filtered_data[1],1)))

plt.title('Consumo energético por bit')
plt.legend(["EvoMCS_v1", "EvoMCS_v2"], loc="upper right")
plt.ylabel("Energia (J/bit)")
plt.xlabel("Geração")

# save plot
plt.savefig("Energy_per_bit_basico.jpg")


inter=[[[0, 6, 160, 0, 0, 800, 1, 0, 4, 0.942041, 115602.0, 0.284979, 1.047129722789398e-05], [0, 6, 80, 0, 0, 800, 0, 0, 4, 0.942041, 115602.0, 0.284979, 1.047129722789398e-05], [0, 6, 80, 0, 0, 800, 1, 0, 4, 0.942041, 115602.0, 0.284979, 1.047129722789398e-05], [0, 5, 160, 0, 0, 1600, 0, 0, 3, 0.948224, 104911.0, 0.354138, 1.2239194659397013e-05], [0, 5, 80, 0, 0, 800, 1, 1, 0, 1.01681, 87103.4, 0.423407, 1.6616279865883538e-05], [0, 5, 80, 0, 0, 800, 1, 1, 0, 1.01681, 87103.4, 0.423407, 1.6616279865883538e-05], [1, 5, 160, 0, 0, 0, 1, 0, 4, 3.24472, 60769.4, 0.538524, 1.6616279865883538e-05], [0, 6, 80, 1, 0, 800, 1, 0, 4, 0.996953, 82898.5, 0.552111, 1.8665979695446843e-05], [1, 5, 20, 0, 0, 0, 0, 0, 20, 3.21689, 93775.7, 0.392413, 4.776546008795455e-05], [0, 6, 160, 1, 0, 1600, 1, 1, 11, 0.952689, 10413.3, 0.939599, 8.214791643952383e-05]],
[[0, 6, 160, 0, 0, 800, 1, 0, 4, 0.942041, 115602.0, 0.284979, 1.047129722789398e-05], [0, 6, 80, 0, 0, 800, 0, 0, 4, 0.942041, 115602.0, 0.284979, 1.047129722789398e-05], [0, 6, 80, 0, 0, 800, 1, 0, 4, 0.942041, 115602.0, 0.284979, 1.047129722789398e-05], [0, 6, 160, 0, 0, 3200, 0, 0, 5, 0.940847, 92034.5, 0.485545, 1.5186376376413194e-05], [0, 5, 80, 0, 0, 800, 1, 1, 5, 0.936604, 89668.7, 0.518153, 1.5857352369466712e-05], [0, 5, 80, 0, 0, 800, 1, 1, 5, 0.936604, 89668.7, 0.518153, 1.5857352369466712e-05], [0, 6, 80, 0, 1, 800, 1, 0, 4, 9223372036854775807, -1.0, 1.0, 1.5857352369466712e-05], [0, 5, 80, 1, 0, 1600, 1, 0, 11, 0.950957, 10400.0, 0.939982, 0.00017738840988211542], [0, 6, 160, 0, 0, 1600, 1, 1, 11, 9223372036854775807, -1.0, 1.0, 9223372036854775807], [0, 6, 80, 1, 0, 800, 0, 0, 4, 0.996953, 82898.5, 0.552111, 9223372036854775807]],
[[0, 6, 160, 0, 0, 800, 1, 0, 4, 0.942041, 115602.0, 0.284979, 1.047129722789398e-05], [0, 6, 80, 0, 0, 800, 0, 0, 4, 0.942041, 115602.0, 0.284979, 1.047129722789398e-05], [0, 6, 80, 0, 0, 800, 1, 0, 4, 0.942041, 115602.0, 0.284979, 1.047129722789398e-05], [0, 6, 80, 0, 0, 800, 0, 0, 4, 0.942041, 115602.0, 0.284979, 1.047129722789398e-05], [1, 5, 20, 0, 0, 0, 1, 1, 5, 3.23947, 65530.6, 0.529591, 7.56145092028762e-05], [0, 6, 20, 1, 0, 800, 0, 1, 8, 0.926534, 10415.3, 0.939395, 0.00017252651454398817], [0, 6, 20, 0, 1, 800, 1, 0, 4, 9223372036854775807, -1.0, 1.0, 9223372036854775807], [0, 6, 20, 0, 1, 800, 1, 0, 4, 9223372036854775807, -1.0, 1.0, 9223372036854775807], [0, 6, 20, 0, 1, 800, 1, 0, 4, 9223372036854775807, -1.0, 1.0, 9223372036854775807], [0, 6, 20, 0, 1, 800, 1, 0, 4, 9223372036854775807, -1.0, 1.0, 9223372036854775807]],
[[0, 6, 160, 0, 0, 800, 1, 0, 4, 0.942041, 115602.0, 0.284979, 1.047129722789398e-05], [0, 6, 80, 0, 0, 800, 0, 0, 4, 0.942041, 115602.0, 0.284979, 1.047129722789398e-05], [0, 6, 80, 0, 0, 800, 1, 0, 4, 0.942041, 115602.0, 0.284979, 1.047129722789398e-05], [0, 6, 20, 0, 0, 800, 1, 0, 4, 0.942041, 115602.0, 0.284979, 1.047129722789398e-05], [0, 6, 80, 0, 0, 800, 0, 0, 4, 0.942041, 115602.0, 0.284979, 1.047129722789398e-05], [0, 6, 20, 0, 0, 800, 1, 0, 4, 0.942041, 115602.0, 0.284979, 1.047129722789398e-05], [0, 6, 160, 0, 0, 800, 1, 1, 4, 0.944431, 116517.0, 0.298624, 1.0526024210578712e-05], [1, 5, 20, 0, 0, 0, 0, 1, 5, 3.23947, 65530.6, 0.529591, 7.56145092028762e-05], [0, 6, 20, 1, 1, 800, 0, 1, 10, 0.963608, 10383.0, 0.939943, 0.00018003896699836272], [0, 6, 160, 0, 1, 800, 0, 1, 5, 9223372036854775807, -1.0, 1.0, 9223372036854775807]]
]

filtered_int= []
filter_data(inter, filtered_int)

fig_b = plt.figure()

fitness_int = [1.047129722789398e-05, 1.047129722789398e-05, 1.047129722789398e-05, 1.047129722789398e-05]


plt.plot(range(26,len(fitness_int)+26), fitness_int)

plt.title('Fitness do melhor individuo (cenário intermédio)')
plt.legend(["EvoMCS_v1"], loc="upper right")
plt.ylabel("Fitness")
plt.xlabel("Geração")

# save plot
plt.savefig("Best_fitness_intermedio.jpg")